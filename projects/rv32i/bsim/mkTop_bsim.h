/*
 * Generated by Bluespec Compiler (build 102a30c)
 * 
 * On Mon Feb  1 21:37:17 PST 2021
 * 
 */

/* Generation options: */
#ifndef __mkTop_bsim_h__
#define __mkTop_bsim_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkProcessor.h"


/* Class declaration for the mkTop_bsim module */
class MOD_mkTop_bsim : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt32,tUInt32,tUInt8> INST_main_dmem_mem_memory;
  MOD_Reg<tUInt8> INST_main_dmem_mem_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt32> INST_main_dmem_mem_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt32> INST_main_dmem_mem_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt32> INST_main_dmem_mem_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_main_dmem_mem_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_main_dmem_mem_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt32> INST_main_dmem_mem_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt32> INST_main_dmem_mem_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt32> INST_main_dmem_mem_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_main_dmem_mem_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_main_dmem_mem_serverAdapterB_writeWithResp;
  MOD_Fifo<tUInt8> INST_main_dmem_readOffsetQ;
  MOD_Fifo<tUInt64> INST_main_dmem_reqQ;
  MOD_Reg<tUInt32> INST_main_dmembytes;
  MOD_BRAM<tUInt32,tUInt32,tUInt8> INST_main_imem_mem_memory;
  MOD_Reg<tUInt8> INST_main_imem_mem_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt32> INST_main_imem_mem_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt32> INST_main_imem_mem_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt32> INST_main_imem_mem_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_main_imem_mem_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_main_imem_mem_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt32> INST_main_imem_mem_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt32> INST_main_imem_mem_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt32> INST_main_imem_mem_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_main_imem_mem_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_main_imem_mem_serverAdapterB_writeWithResp;
  MOD_Fifo<tUInt8> INST_main_imem_readOffsetQ;
  MOD_Fifo<tUInt64> INST_main_imem_reqQ;
  MOD_Reg<tUInt32> INST_main_imembytes;
  MOD_mkProcessor INST_main_proc;
  MOD_Reg<tUInt8> INST_main_processorStart;
  MOD_Reg<tUInt32> INST_main_serialCmd;
  MOD_Fifo<tUInt8> INST_main_serialrxQ;
  MOD_Fifo<tUInt8> INST_main_serialtxQ;
  MOD_Fifo<tUInt8> INST_uart_inQ;
  MOD_Reg<tUInt8> INST_uart_inReqId;
  MOD_Reg<tUInt8> INST_uart_outCnt;
  MOD_Fifo<tUInt8> INST_uart_outQ;
 
 /* Constructor */
 public:
  MOD_mkTop_bsim(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_main_serialCmd_73_BIT_8___d374;
  tUInt8 DEF_IF_main_serialCmd_73_BIT_8_74_THEN_main_serial_ETC___d379;
  tUInt8 DEF_IF_main_serialCmd_73_BIT_8_74_THEN_main_serial_ETC___d378;
  tUInt64 DEF_main_dmem_reqQ_first____d281;
  tUInt64 DEF_main_imem_reqQ_first____d122;
  tUInt32 DEF_main_serialCmd___d373;
  tUInt8 DEF_b__h6339;
  tUInt8 DEF_b__h4991;
  tUInt8 DEF_b__h2446;
  tUInt8 DEF_b__h1098;
  tUInt8 DEF_main_dmem_mem_serverAdapterB_s1___d268;
  tUInt8 DEF_main_dmem_mem_serverAdapterA_s1___d209;
  tUInt8 DEF_main_imem_mem_serverAdapterB_s1___d109;
  tUInt8 DEF_main_imem_mem_serverAdapterA_s1___d50;
  tUInt8 DEF_main_dmem_mem_serverAdapterB_cnt_3_whas____d241;
  tUInt8 DEF_main_dmem_mem_serverAdapterB_cnt_2_whas____d239;
  tUInt8 DEF_main_dmem_mem_serverAdapterB_cnt_1_whas____d238;
  tUInt8 DEF_main_dmem_mem_serverAdapterA_cnt_3_whas____d182;
  tUInt8 DEF_main_dmem_mem_serverAdapterA_cnt_2_whas____d180;
  tUInt8 DEF_main_dmem_mem_serverAdapterA_cnt_1_whas____d179;
  tUInt8 DEF_main_imem_mem_serverAdapterB_cnt_3_whas____d82;
  tUInt8 DEF_main_imem_mem_serverAdapterB_cnt_2_whas____d80;
  tUInt8 DEF_main_imem_mem_serverAdapterB_cnt_1_whas____d79;
  tUInt8 DEF_main_imem_mem_serverAdapterA_cnt_3_whas____d23;
  tUInt8 DEF_main_imem_mem_serverAdapterA_cnt_2_whas____d21;
  tUInt8 DEF_main_imem_mem_serverAdapterA_cnt_1_whas____d20;
  tUInt8 DEF_main_dmem_reqQ_first__81_BIT_0___d282;
  tUInt8 DEF_main_imem_reqQ_first__22_BIT_0___d123;
  tUInt8 DEF_IF_main_serialCmd_73_BIT_8_74_THEN_main_serial_ETC___d377;
  tUInt8 DEF_main_dmem_mem_serverAdapterB_s1_68_BIT_0___d269;
  tUInt8 DEF_main_dmem_mem_serverAdapterA_s1_09_BIT_0___d210;
  tUInt8 DEF_main_imem_mem_serverAdapterB_s1_09_BIT_0___d110;
  tUInt8 DEF_main_imem_mem_serverAdapterA_s1_0_BIT_0___d51;
  tUInt8 DEF_NOT_main_serialCmd_73_BIT_8_74___d375;
 
 /* Local definitions */
 private:
  tUInt32 DEF_v__h9960;
  tUInt32 DEF_x__h5951;
  tUInt32 DEF_x__h4603;
  tUInt32 DEF_x__h2058;
  tUInt32 DEF_x__h708;
 
 /* Rules */
 public:
  void RL_main_imem_mem_serverAdapterA_outData_setFirstCore();
  void RL_main_imem_mem_serverAdapterA_outData_setFirstEnq();
  void RL_main_imem_mem_serverAdapterA_outData_enqOnly();
  void RL_main_imem_mem_serverAdapterA_outData_deqOnly();
  void RL_main_imem_mem_serverAdapterA_outData_enqAndDeq();
  void RL_main_imem_mem_serverAdapterA_cnt_finalAdd();
  void RL_main_imem_mem_serverAdapterA_s1__dreg_update();
  void RL_main_imem_mem_serverAdapterA_stageReadResponseAlways();
  void RL_main_imem_mem_serverAdapterA_moveToOutFIFO();
  void RL_main_imem_mem_serverAdapterA_overRun();
  void RL_main_imem_mem_serverAdapterB_outData_setFirstCore();
  void RL_main_imem_mem_serverAdapterB_outData_setFirstEnq();
  void RL_main_imem_mem_serverAdapterB_outData_enqOnly();
  void RL_main_imem_mem_serverAdapterB_outData_deqOnly();
  void RL_main_imem_mem_serverAdapterB_outData_enqAndDeq();
  void RL_main_imem_mem_serverAdapterB_cnt_finalAdd();
  void RL_main_imem_mem_serverAdapterB_s1__dreg_update();
  void RL_main_imem_mem_serverAdapterB_stageReadResponseAlways();
  void RL_main_imem_mem_serverAdapterB_moveToOutFIFO();
  void RL_main_imem_mem_serverAdapterB_overRun();
  void RL_main_imem_doWrite();
  void RL_main_dmem_mem_serverAdapterA_outData_setFirstCore();
  void RL_main_dmem_mem_serverAdapterA_outData_setFirstEnq();
  void RL_main_dmem_mem_serverAdapterA_outData_enqOnly();
  void RL_main_dmem_mem_serverAdapterA_outData_deqOnly();
  void RL_main_dmem_mem_serverAdapterA_outData_enqAndDeq();
  void RL_main_dmem_mem_serverAdapterA_cnt_finalAdd();
  void RL_main_dmem_mem_serverAdapterA_s1__dreg_update();
  void RL_main_dmem_mem_serverAdapterA_stageReadResponseAlways();
  void RL_main_dmem_mem_serverAdapterA_moveToOutFIFO();
  void RL_main_dmem_mem_serverAdapterA_overRun();
  void RL_main_dmem_mem_serverAdapterB_outData_setFirstCore();
  void RL_main_dmem_mem_serverAdapterB_outData_setFirstEnq();
  void RL_main_dmem_mem_serverAdapterB_outData_enqOnly();
  void RL_main_dmem_mem_serverAdapterB_outData_deqOnly();
  void RL_main_dmem_mem_serverAdapterB_outData_enqAndDeq();
  void RL_main_dmem_mem_serverAdapterB_cnt_finalAdd();
  void RL_main_dmem_mem_serverAdapterB_s1__dreg_update();
  void RL_main_dmem_mem_serverAdapterB_stageReadResponseAlways();
  void RL_main_dmem_mem_serverAdapterB_moveToOutFIFO();
  void RL_main_dmem_mem_serverAdapterB_overRun();
  void RL_main_dmem_doWrite();
  void RL_main_relayImemReq();
  void RL_main_relayDmemReq();
  void RL_main_procimemread();
  void RL_main_procdmemread();
  void RL_main_procSerialRx();
  void RL_uart_relayOut();
  void RL_uart_relayIn();
  void RL_relayUartIn();
  void RL_relayUartOut();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTop_bsim &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTop_bsim &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTop_bsim &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkTop_bsim &backing);
};

#endif /* ifndef __mkTop_bsim_h__ */
